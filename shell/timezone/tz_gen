#!/bin/bash

#if [[ ! "$BASH_VERSION" > "4" ]]; then
#  echo 'Requires bash version 4 and later supporting associative array!'
#  exit
#fi

declare -a tz_db_index

declare -a tz_db_zones
declare -a tz_db_names

declare -a tz_db_offset1
declare -a tz_db_offset2
declare -a tz_db_abbr1
declare -a tz_db_abbr2

total=0
unknown_dst=0

add_zone()
{
  local line="$1"

  offset1=$(echo "$line" | awk -F '|' '{print $1}')
  name=$(echo "$line" | awk -F '|' '{print $2}')
  abbr1=$(echo "$line" | awk -F '|' '{print $3}')
  offset2=$(echo "$line" | awk -F '|' '{print $4}')
  abbr2=$(echo "$line" | awk -F '|' '{print $5}')
  zone=$(echo "$line" | awk -F '|' '{print $6}')
  index=$(echo "$line" | awk -F '|' '{print $7}')

  tz_db_index[$total]=$index
  tz_db_zones[$total]=$zone
  tz_db_names[$total]="$name"
  tz_db_offset1[$total]=$offset1
  tz_db_offset2[$total]=$offset2
  tz_db_abbr1[$total]=$abbr1
  tz_db_abbr2[$total]=$abbr2

  let 'total++'
}

gen_xml()
{
  index=${tz_db_index[$1]}
  offset1=${tz_db_offset1[$1]}
  name=$(echo "${tz_db_names[$1]}" | sed -e 's~&~\&amp;~g' -e 's~<~\&lt;~g' -e 's~>~\&gt;~g')

  printf '<Option value="%s">%s</Option>\n' $index "$offset1 $name"
}

get_dst_rule()
{
    local _rule="unknown"
    local _vary=0

    case $1 in
      "America/Adak" | "America/Nome" | "America/Sitka" | "America/Yakutat" | "America/Juneau" | \
      "America/Anchorage" | "America/Los_Angeles" | "America/Tijuana" | "America/Santa_Isabel" | "America/Vancouver" | \
      "America/Whitehorse" | "America/Dawson" | "America/Boise" | "America/Denver" | "America/Ojinaga" | \
      "America/Mazatlan" | "America/Chihuahua" | "America/Cambridge_Bay" | "America/Inuvik" | "America/Yellowknife" | \
      "America/Edmonton" | "America/North_Dakota/Center" | "America/North_Dakota/New_Salem" | "America/North_Dakota/Beulah" | \
      "America/Menominee" | "America/Indiana/Knox" | "America/Indiana/Tell_City" | "America/Chicago" | \
      "America/Matamoros" | "America/Monterrey" | "America/Bahia_Banderas" | "America/Cancun" | "America/Mexico_City" | \
      "America/Merida" | "America/Resolute" | "America/Rainy_River" | "America/Winnipeg" | "America/Rankin_Inlet" | \
      "America/Detroit" | "America/Kentucky/Monticello" | "America/Kentucky/Louisville" | "America/Indiana/Vevay" | \
      "America/Indiana/Winamac" | "America/Indiana/Petersburg" | "America/Indiana/Indianapolis" | "America/Indiana/Vincennes" | \
      "America/Indiana/Marengo" | "America/New_York" | "America/Grand_Turk" | "America/Port-au-Prince" | "America/Thunder_Bay" | \
      "America/Pangnirtung" | "America/Nipigon" | "America/Toronto" | "America/Iqaluit" | "America/Nassau" | \
      "America/Halifax" | "America/Moncton" | "America/Goose_Bay" | \
      "Atlantic/Bermuda" | "America/Thule" | "America/Glace_Bay" | "America/St_Johns" | \
      "America/Miquelon" )
        _rule="M3.2.0/2,M11.1.0/2"
        ;;
      "America/Havana" )
        _rule="M3.1.6/24,M11.1.0/1"
        ;;
      "America/Godthab" )  # European, UTC-3
        _rule="M3.5.6/22,M10.5.6/23"
        ;;
      "America/Scoresbysund" | "Atlantic/Azores" ) # European, UTC-1
        _rule="M3.5.0/0,M10.5.0/1"
        ;;
      "Europe/Dublin" | "Europe/Guernsey" | "Europe/Isle_of_Man" | "Europe/Jersey" | "Europe/London" | \
      "Atlantic/Canary" | "Atlantic/Faroe" | "Atlantic/Madeira" | "Europe/Lisbon" )  # European, UTC+0
        _rule="M3.5.0/1,M10.5.0/2"
        ;;
      "Africa/Ceuta" | "Arctic/Longyearbyen" | "Europe/Amsterdam" | "Europe/Andorra" | "Europe/Belgrade" | \
      "Europe/Berlin" | "Europe/Bratislava" | "Europe/Brussels" | "Europe/Budapest" | "Europe/Busingen" | \
      "Europe/Copenhagen" | "Europe/Gibraltar" | "Europe/Ljubljana" | "Europe/Luxembourg" | "Europe/Madrid" | \
      "Europe/Malta" | "Europe/Monaco" | "Europe/Oslo" | "Europe/Paris" | "Europe/Podgorica" | \
      "Europe/Prague" | "Europe/Rome" | "Europe/San_Marino" | "Europe/Sarajevo" | "Europe/Skopje" | \
      "Europe/Stockholm" | "Europe/Tirane" | "Europe/Vaduz" | "Europe/Vatican" | "Europe/Vienna" | \
      "Europe/Warsaw" | "Europe/Zagreb" | "Europe/Zurich" | "" ) # European, UTC+1
        _rule="M3.5.0/2,M10.5.0/3"
        ;;
      "Asia/Nicosia" | "Europe/Athens" | "Europe/Bucharest" | "Europe/Chisinau" | "Europe/Helsinki" | \
      "Europe/Istanbul" | "Europe/Kiev" | "Europe/Mariehamn" | "Europe/Riga" | "Europe/Sofia" | \
      "Europe/Tallinn" | "Europe/Uzhgorod" | "Europe/Vilnius" | "Europe/Zaporozhye" )  # European, UTC+2
        _rule="M3.5.0/3,M10.5.0/4"
        ;;
      "Asia/Baku" )
        _rule="M3.5.0/4,M10.5.0/5"
        ;;
      "Africa/Casablanca" | "Africa/El_Aaiun" )
        _rule="M3.5.0/2,M10.5.0/3"
        _vary=1
        ;;
      "Antarctica/Troll" )
        _rule="M3.5.0/1,M10.5.0/3"
        ;;
      "Africa/Cairo" )
        _rule="M4.5.5/0,M9.5.5/0"
        _vary=1
        ;;
      "Asia/Amman" )
        _rule="M3.5.5/0,M10.5.5/1"
        ;;
      "Asia/Beirut" )
        _rule="M3.5.0/0,M10.5.0/0"
        ;;
      "Asia/Damascus" )
        _rule="M3.5.5/0,M10.5.5/0"
        ;;
      "Asia/Gaza" | "Asia/Hebron" )
        _rule="M3.5.5/0,M9.5.5/0"
        ;;
      "Asia/Jerusalem" )
        _rule="M3.5.5/2,M10.5.0/2"
        ;;
      "Asia/Tehran" )
        _rule="J81/0,J265/0" # 3/22 0:00 through 9/22 0:00
        ;;
      "Pacific/Easter" )
        _rule="M9.1.6/22,M4.5.6/22"
        ;;
      "Antarctica/Palmer" | "America/Santiago" )
        _rule="M9.1.6/24,M4.5.6/24"
        ;;
      "America/Campo_Grande" | "America/Cuiaba" | "America/Sao_Paulo" )
        _rule="M10.3.0/0,M2.3.0/0"
        _vary=1
        ;;
      "America/Asuncion" )
        _rule="M10.1.0/0,M3.4.0/0"
        ;;
      "America/Montevideo" )
        _rule="M10.1.0/2,M3.2.0/2"
        ;;
      "Africa/Windhoek" )
        _rule="M9.1.0/2,M4.1.0/2"
        ;;
      "Australia/Broken_Hill" | "Australia/Adelaide" | "Australia/Sydney" | "Australia/Currie" | "Australia/Hobart" | "Australia/Melbourne" )
        _rule="M10.1.0/2,M4.1.0/3"
        ;;
      "Australia/Lord_Howe" )
        _rule="M10.1.0/2,M4.1.0/2"
        ;;
      "Pacific/Fiji" )
        _rule="M11.1.0/2,M1.3.0/3"
        ;;
      "Antarctica/McMurdo" | "Pacific/Auckland" )
        _rule="M9.5.0/2,M4.1.0/3"
        ;;
      "Pacific/Chatham" )
        _rule="M9.5.0/2:45,M4.1.0/3:45"
        ;;
      "Pacific/Apia" )
        _rule="M9.5.0/3,M4.1.0/4"
        ;;
      * )
        let 'unknown_dst++'
        ;;
    esac

  eval "$2=$_rule"
  eval "$3=$_vary"
}

gen_c()
{
  index=${tz_db_index[$1]}
  zone=${tz_db_zones[$1]}
  name="${tz_db_names[$1]}"
  offset1=${tz_db_offset1[$1]}
  offset2=${tz_db_offset2[$1]}
  abbr1=${tz_db_abbr1[$1]}
  abbr2=${tz_db_abbr2[$1]}

  if [ "$offset1" != "+00:00" -a "$offset1" != "-00:00" ]; then
    if echo $offset1 | grep -q ^+; then
      offset1=$(echo $offset1 | tr + -)
    else
      offset1=$(echo $offset1 | tr - +)
    fi
  else
    offset1="+0"
  fi

  if [ "$offset2" != "+00:00" -a "$offset2" != "-00:00" ]; then
    if echo $offset2 | grep -q ^+; then
      offset2=$(echo $offset2 | tr + -)
    else
      offset2=$(echo $offset2 | tr - +)
    fi
  else
    offset2="+0"
  fi

  if [ "$offset1" = "$offset2" ]; then
    printf '    { %i, "%s", 0, "" },  /* %s */\n' $index "$abbr1$offset1" "$name, $zone"
  else
    dst_vary=0
    dst_rule=""
    get_dst_rule $zone dst_rule dst_vary
    printf '    { %i, "%s", %i, "%s,%s" },  /* %s */\n' $index "$abbr1$offset1" $dst_vary "$abbr2$offset2" "$dst_rule" "$name, $zone"
  fi
}

while true; do
read line
[ -z "$line" ] && break
if echo $line | grep -q '^[-+][0-9:]\+|'; then
  add_zone "$line"
fi
done

[ "$total" -eq "0" ] && exit

i=0
while [ "$i" -lt "$total" ]; do
  gen_xml $i
  let 'i++'
done
echo

i=0
while [ "$i" -lt "$total" ]; do
  gen_c $i
  let 'i++'
done
echo

echo "$total zones"
if [ "$unknown_dst" -gt "0" ]; then
  echo "$unknown_dst unknown DST zones!!!"
fi

